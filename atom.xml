<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LySnake个人博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://LySnake.github.io/"/>
  <updated>2017-02-02T03:56:42.358Z</updated>
  <id>http://LySnake.github.io/</id>
  
  <author>
    <name>LySnake</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Github Pages与Hexo框架博客的搭建</title>
    <link href="http://LySnake.github.io/archives/technology/Github%20Pages%E4%B8%8EHexo%E6%A1%86%E6%9E%B6%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA.html"/>
    <id>http://LySnake.github.io/archives/technology/Github Pages与Hexo框架博客的搭建.html</id>
    <published>2017-01-22T18:45:57.418Z</published>
    <updated>2017-02-02T03:56:42.358Z</updated>
    
    <content type="html"><![CDATA[<p>这篇博文的目的不是<a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a>与<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">Hexo框架</a>框架搭建个人博客的教学，毕竟官网教学更详细更全面，而是记录本人搭建过程中了解、学习并汇总的一些东西，附带链接陈列出来，主要供第一次搭建的朋友参考学习。<br><a id="more"></a></p>
<h1 id=""><a href="#" class="headerlink" title="#"></a>#</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="git与github"><a href="#git与github" class="headerlink" title="git与github"></a>git与github</h3><p><strong>git</strong>:查看廖雪峰的<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000" target="_blank" rel="external">git简介</a>。<br>git工具是Linus继linux开源操作系统之后又一影响世界的项目，因与linux的关系，所以本身是命令行模式，对大多数人来说是不够友好的，在实际使用中可以使用windows或iOS平台上的桌面软件，虽然这样并不能使用git的全部功能。<a href="https://www.github.com/" target="_blank" rel="external">Github</a>就是使用git的通信协议，得力于开源精神而创建的一个平台，并且linux项目也在<a href="https://www.github.com/" target="_blank" rel="external">Github</a>上托管，我们可以使用桌面软件<a href="https://www.sourcetreeapp.com/" target="_blank" rel="external">Source Tree</a>管理我们在<a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a>上的博客项目。</p>
<p><strong>学习成本</strong>：初期算半天吧，git重操作，前期学习<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰的git教学</a>了解基本理念，之后以多用多学为主，不会咱可以google。</p>
<h3 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h3><p><a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a>具体信息查看官网是最权威的，这里提出为何使用Github Pages搭建博客的原因：</p>
<ul>
<li><p><strong>版本管理</strong>：<a href="www.github.com">github</a>是目前程序员最火的一个免费的版本管理平台，所谓版本管理，主要是针对文本文档的管理，解决多人、异地、长时间维护共同项目文档所带来的问题，并因为开源精神，所以Free(免费且自由)。</p>
</li>
<li><p><strong>展示</strong>：<a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a>是给<a href="www.github.com">github</a>中用户或项目的一个展示项目，并免费提供300M空间，就项目而言，提供项目介绍与使用相关，对于个人而言可以作为博客，分享知识，也有利于他人了解自己。</p>
</li>
<li><p><strong>全球优良的网络</strong>：这个平台是程序员为主的平台，有google、微软等众多一线科技公司在这发布开源项目，也有现今互联网基石linux在其平台进行管理，而且也是技术界大佬建立的公司，在全球都拥有很好的网络连接。</p>
</li>
<li><p><strong>学习</strong>：<a href="www.github.com">github</a>上有很多开源的项目，因此也提供了很多开源的软件，比如<a href="https://github.com/Wox-launcher/Wox" target="_blank" rel="external">wox</a>方便windows更好的打开应用。同样，<a href="www.github.com">github</a>也是程序员学习，创建开源项目的地方，可以与他人一同开发、维护开源项目，这其中必不可少的使用git版本管理工具。</p>
</li>
<li><p><strong>其他领域</strong>：<a href="www.github.com">github</a>同样开始影响其他领域，可以一起创建项目翻译国外文档、写小说、写项目说明。学习并使用github或许能学习到不一样的知识。参考<a href="https://www.gitbook.com/" target="_blank" rel="external">gitbook</a></p>
</li>
<li><p><strong>搭建学习成本</strong>：根据<a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a>创建<a href="www.github.com">github</a>帐号，Github Pages项目，不到一小时。</p>
</li>
</ul>
<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p><a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a>中介绍使用Jekyll框架，因为勘察时感觉对于个人博客而言Jekyll的主题不够华丽，而后选择了<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">Hexo框架</a>。在使用上，需要安装Node.js，以命令行的形式使用，对于没有使用过命令行操作电脑的小伙伴还是有点不友好的。对于windows用户可以使用<a href="https://github.com/cmderdev/cmder" target="_blank" rel="external">cmder</a>代替CMD。win7以上可以使用powershell。对于什么是命令行，使用win + R组合键再输入cmd，看到的界面就是命令行界面，以输入字符的方式操作电脑。</p>
<p><strong>学习成本</strong>：参考<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="external">Hexo命令</a>,命令行常用操作也就只有一个网页，常用不到5个命令。但了解、熟悉并使用一定的自定义要看个人。全部搭建完花费4天时间。以后只要编写markdown文档和常用几个命令了。</p>
<h3 id="静态网站"><a href="#静态网站" class="headerlink" title="静态网站"></a>静态网站</h3><p><strong>个人在该博客中对静态、动态网站的理解</strong>：对于浏览器而言是没有多大的区别，相关的也就是使用中要与服务器发送或接收数据，对于服务器而言，静态网页差不多就是网络端存储了些网页相关的资源文件，如html、css、js、图片等，服务器主要响应文件请求与发送；而对于动态网站，我们可以参考QQ空间，每个人的空间基本结构是一样的，但是每个人每个时间点显示的信息都是不一样的，这是因为后台使用PHP、Python、Java等web服务器，在每个用户请求页面时通过与数据库交互，获取特定数据再生成特定资源文件(html、css等)发送到用户浏览器。</p>
<h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><p><a href="http://markdown-zh.readthedocs.io/en/latest/" target="_blank" rel="external">Markdown</a>官方：</p>
<blockquote>
<p>Markdown 的目标是易于阅读, 创作和编辑文章. HTML 是一种 发布 格式; Markdown 是一种 创作 格式. 因此, Markdown 处理的都是纯文本。</p>
</blockquote>
<p>目前，已知在<a href="www.github.com">github</a>上的项目介绍文件，就是使用Markdown，并且在项目相关的issues等一些文字发布区域，也支持Markdown的编写与预览。其他网站也有推荐使用Markdown进行回答、评论、书写，比如<a href="http://www.jianshu.com/p/d62ca374c90f" target="_blank" rel="external">简书</a>，而我们搭建的博客，就是通过使用Markdown编写成源文件，通过<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">Hexo框架</a>与<a href="https://hexo.io/themes/" target="_blank" rel="external">相关主题</a>生成静态网页，再更新到<a href="www.github.com">github</a>个人博客项目库中。并且Markdown可以通过更多插件，提供更多功能，可以预见的是，Markdown将会越加火热。</p>
<p><strong>学习成本</strong>：半天，与git一样，初步了解后多写多练，不会或者忘记勤查文档。</p>
<h2 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h2><h3 id="Hexo本地工程目录"><a href="#Hexo本地工程目录" class="headerlink" title="Hexo本地工程目录"></a>Hexo本地工程目录</h3><p>参考<a href="https://hexo.io/zh-cn/docs/setup.html" target="_blank" rel="external">Hexo建站</a>,假设我们在HexoInit目录下使用<code>hexo init</code>命令来初始化Hexo工程，参考<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">Hexo配置</a>设置配置文件，在HexoInit目录下，我们可以看到:</p>
<ul>
<li>node_modules目录：该目录是npm下载的一些插件，不需直接管理，如有添加、删除应尽量使用npm命令。</li>
<li>public目录：当使用<code>hexo g</code>命令后，会生成静态站相关文件，先通过<code>hexo s</code>本地查看页面，以便修改，最后直接把该目录所有文件上传（commit）到<a href="www.github.com">github</a>个人博客项目，然后再访问。</li>
<li>scaffolds目录：该目录存放模板，模板文件是markdown文件<code>*.md</code>，初始化时已存在三个模板文件，分别对应三个<code>layout</code>。现假设我们有模板jottings.md,内容如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">layout: post</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">update: &#123;&#123; updated &#125;&#125;</div><div class="line">comments: false</div><div class="line">categories:</div><div class="line">  - archives</div><div class="line">  - jottings</div><div class="line">tags:</div><div class="line">---</div></pre></td></tr></table></figure>
<p>当使用<code>hexo new jottings fileName</code>命令时，就会以jottings.md的内容生成一个fileName.md文件在source/_posts/目录下，相关配置参考<a href="https://hexo.io/zh-cn/docs/front-matter.html" target="_blank" rel="external">Front-matter</a>。</p>
<ul>
<li>source目录：存放使用markdown编写的源文件，当使用<code>hexo g</code>命令生成public目录文件时，Hexo和主题就会使用source目录中的*.md文件生成最后的静态网页文件，其下子目录分布与layout有关。</li>
<li>themes目录：存放配置主题，相关说明见<a href="https://hexo.io/zh-cn/docs/themes.html" target="_blank" rel="external">Hexo主题说明</a>。</li>
<li>_config.yml文件：这是Hexo本地工程的配置文件，相关使用说明参考<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">Hexo配置</a></li>
<li>db.json文件：缓存文件，使用<code>hexo clean</code>会清除，使用<code>hexo g</code>时会生成。</li>
<li>package.json文件：该本地工程npm配置文件，记录了node_modules目录安装的插件，如果存在一份配置好的package.json文件，可以直接在HexoInit目录下使用<code>npm install</code>命令读取配置文件安装相关插件。</li>
</ul>
<h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><p>node_modules目录内容可以根据package.json生成，public目录根据source目录生成，所以我们应备份source目录与_config.yml、package.json二个文件，另外，如果有定制化的scaffolds目录文件，也要备份，以便于今后重建工程时能快速搭建。</p>
<h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>该博客使用的是<a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">yelee主题</a>，<a href="https://hexo.io/themes/" target="_blank" rel="external">更多主题选择</a>,选择自己喜欢的主题，参考<a href="https://hexo.io/zh-cn/docs/themes.html" target="_blank" rel="external">Hexo主题说明</a>配置，一般一个完善的主题会有使用帮助，具体配置，如<a href="http://moxfive.coding.me/yelee/" target="_blank" rel="external">yelee使用说明</a>。在yelee使用说明中，可以查看主题完成显示相关，个性化相关的一些配置，也集成了一些第三方服务与评论系统。</p>
<h2 id="相关帮助连接"><a href="#相关帮助连接" class="headerlink" title="相关帮助连接"></a>相关帮助连接</h2><ul>
<li><a href="https://github.com/getlantern/forum#%E8%93%9D%E7%81%AFlantern%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%E4%B8%8B%E8%BD%BD" target="_blank" rel="external">蓝灯番墙</a></li>
<li><a href="https://wsgzao.github.io/post/fq/" target="_blank" rel="external">更多番墙方案</a>:个人使用XX-NET</li>
<li><a href="www.github.com">github</a></li>
<li><a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰的git教学</a></li>
<li><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">Hexo官网</a></li>
<li><a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo主题</a></li>
<li><a href="http://markdown-zh.readthedocs.io/en/latest/" target="_blank" rel="external">Markdown官方教程</a></li>
<li><a href="https://github.com/cmderdev/cmder" target="_blank" rel="external">cmder</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">阮一峰博客-Github Pages搭建博客入门</a></li>
<li><a href="https://wsgzao.github.io/post/hexo-guide/" target="_blank" rel="external">使用GitHub和Hexo搭建免费静态Blog</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇博文的目的不是&lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;与&lt;a href=&quot;https://hexo.io/zh-cn/docs/index.html&quot;&gt;Hexo框架&lt;/a&gt;框架搭建个人博客的教学，毕竟官网教学更详细更全面，而是记录本人搭建过程中了解、学习并汇总的一些东西，附带链接陈列出来，主要供第一次搭建的朋友参考学习。&lt;br&gt;
    
    </summary>
    
      <category term="archives" scheme="http://LySnake.github.io/categories/archives/"/>
    
      <category term="technology" scheme="http://LySnake.github.io/categories/archives/technology/"/>
    
    
      <category term="Github Pages" scheme="http://LySnake.github.io/tags/github-pages/"/>
    
      <category term="Hexo" scheme="http://LySnake.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
